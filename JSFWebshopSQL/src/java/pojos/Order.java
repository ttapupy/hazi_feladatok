package pojos;
// Generated 2019.04.23. 16:59:55 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name="order"
    ,catalog="webshop"
)
public class Order  implements java.io.Serializable {


     private Integer id;
     private Client client;
     private boolean fulfilled;
     private Date date;
     private Set<Orderitem> orderitems = new HashSet<Orderitem>(0);

    public Order() {
    }

	
    public Order(Client client, boolean fulfilled) {
        this.client = client;
        this.fulfilled = fulfilled;
    }
    public Order(Client client, boolean fulfilled, Date date, Set<Orderitem> orderitems) {
       this.client = client;
       this.fulfilled = fulfilled;
       this.date = date;
       this.orderitems = orderitems;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="client_id", nullable=false)
    public Client getClient() {
        return this.client;
    }
    
    public void setClient(Client client) {
        this.client = client;
    }

    
    @Column(name="fulfilled", nullable=false)
    public boolean isFulfilled() {
        return this.fulfilled;
    }
    
    public void setFulfilled(boolean fulfilled) {
        this.fulfilled = fulfilled;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date", length=10)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<Orderitem> getOrderitems() {
        return this.orderitems;
    }
    
    public void setOrderitems(Set<Orderitem> orderitems) {
        this.orderitems = orderitems;
    }




}


